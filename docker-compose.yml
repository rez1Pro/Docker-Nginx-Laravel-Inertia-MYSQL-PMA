services:
    nginx:
      build:
        context: ./
        dockerfile: ./.docker/.nginx/Dockerfile
      container_name: nginx-server
      ports:
        - "8080:80"
        - "1935:1935"
      volumes:
        - ./.docker/.nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./.docker/.nginx/conf.d/:/etc/nginx/conf.d/
        - ./src/:/usr/app/
        - ./src/public/hls:/tmp/hls
      depends_on:
        - app
      networks:
        - laravel

    app:
      build:
        context: ./
        dockerfile: ./.docker/.php/Dockerfile
      depends_on:
        - mysql-db
        - npm
      container_name: php-server
      volumes:
            - ./src/:/usr/app/
      ports:
        - "9000:8000"
      networks:
        - laravel

    npm:
      container_name: node-server
      image: node:21-alpine
      volumes:
        - ./src:/var/www/html
      working_dir: /var/www/html
      ports:
        - "5173:5173"
      command:
        - /bin/sh
        - -c
        - |
          npm install && npm run dev
      networks:
        - laravel

    mysql-db:
      image: mysql:latest
      container_name: mysql-server
      restart: always
      ports:
        - 3307:3306
      volumes:
        - ./db:/var/lib/mysql
      environment:
        MYSQL_ROOT_PASSWORD: password
        MYSQL_DATABASE: laravel
        MYSQL_PASSWORD: password
      networks:
        - laravel

    redis:
      image: redis:alpine
      container_name: redis-server
      ports:
        - 6380:6379
      networks:
        - laravel

    phpmyadmin:
      image: phpmyadmin/phpmyadmin:latest
      container_name: pma-server
      restart: always
      depends_on:
        - mysql-db
      environment:
        PMA_HOST: mysql-server
      ports:
        - 8081:80
      networks:
        - laravel

networks:
  laravel:
    driver: bridge